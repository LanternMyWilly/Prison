// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prison.Data;

#nullable disable

namespace Prison.Data.Migrations
{
    [DbContext(typeof(PrisonDbContext))]
    partial class PrisonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InmateVisitorsLog", b =>
                {
                    b.Property<Guid>("InmatesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitorsLogsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InmatesId", "VisitorsLogsId");

                    b.HasIndex("VisitorsLogsId");

                    b.ToTable("InmateVisitorsLog");
                });

            modelBuilder.Entity("Prison.Models.Entities.BehaviorLevel.BehaviorLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BehaviorLevels");
                });

            modelBuilder.Entity("Prison.Models.Entities.Cell.Cell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid>("CellTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PrisonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CellTypeId");

                    b.HasIndex("PrisonId");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("Prison.Models.Entities.CellType.CellType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CellTypes");
                });

            modelBuilder.Entity("Prison.Models.Entities.Gender.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("Prison.Models.Entities.Persons.Inmate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BehaviorLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PrisonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SentenceGradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SocialSecurityNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BehaviorLevelId");

                    b.HasIndex("CellId");

                    b.HasIndex("GenderId");

                    b.HasIndex("PrisonId");

                    b.HasIndex("SentenceGradeId");

                    b.ToTable("Inmates");
                });

            modelBuilder.Entity("Prison.Models.Entities.Prison.Prison", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentCapacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prisons");
                });

            modelBuilder.Entity("Prison.Models.Entities.SentenceGrade.SentenceGrade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SentenceGrades");
                });

            modelBuilder.Entity("Prison.Models.Entities.VisitorsLog.VisitorsLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfVisit")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MonthlyVisisted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VisitorsLogs");
                });

            modelBuilder.Entity("InmateVisitorsLog", b =>
                {
                    b.HasOne("Prison.Models.Entities.Persons.Inmate", null)
                        .WithMany()
                        .HasForeignKey("InmatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Entities.VisitorsLog.VisitorsLog", null)
                        .WithMany()
                        .HasForeignKey("VisitorsLogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prison.Models.Entities.Cell.Cell", b =>
                {
                    b.HasOne("Prison.Models.Entities.CellType.CellType", "CellType")
                        .WithMany()
                        .HasForeignKey("CellTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Entities.Prison.Prison", null)
                        .WithMany("Cells")
                        .HasForeignKey("PrisonId");

                    b.Navigation("CellType");
                });

            modelBuilder.Entity("Prison.Models.Entities.Persons.Inmate", b =>
                {
                    b.HasOne("Prison.Models.Entities.BehaviorLevel.BehaviorLevel", "BehaviorLevel")
                        .WithMany()
                        .HasForeignKey("BehaviorLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Entities.Cell.Cell", "Cell")
                        .WithMany("Inmates")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Entities.Gender.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Entities.Prison.Prison", null)
                        .WithMany("Inmates")
                        .HasForeignKey("PrisonId");

                    b.HasOne("Prison.Models.Entities.SentenceGrade.SentenceGrade", "SentenceGrade")
                        .WithMany()
                        .HasForeignKey("SentenceGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BehaviorLevel");

                    b.Navigation("Cell");

                    b.Navigation("Gender");

                    b.Navigation("SentenceGrade");
                });

            modelBuilder.Entity("Prison.Models.Entities.Cell.Cell", b =>
                {
                    b.Navigation("Inmates");
                });

            modelBuilder.Entity("Prison.Models.Entities.Prison.Prison", b =>
                {
                    b.Navigation("Cells");

                    b.Navigation("Inmates");
                });
#pragma warning restore 612, 618
        }
    }
}
